{"version":3,"sources":["components/Buttons/Buttons.jsx","components/Select/Select.jsx","components/ImplementedList/ImplementedList.jsx","components/ImplementedList/listPropTypes.jsx","components/AllButtons/AllButtons.jsx","App.js","index.js"],"names":["Buttons","callback","name","onClick","type","Select","list","map","item","index","key","ImplementedList","PropTypes","bool","isRequired","isReversed","isSortedAlphabetically","isSortedByLength","SelectedLength","copyList","reverse","sort","a","b","localeCompare","length","Number","filter","className","good","AllButtons","isReset","goodsFromServer","App","state","isVisible","showOrHideList","setState","prevState","isSelectedLength","event","target","value","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e737702e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ callback, name }) => (\n  <button\n    onClick={callback}\n    type=\"submit\"\n  >\n    {name}\n  </button>\n);\n\nButtons.propTypes = {\n  callback: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Select = ({ callback, list }) => (\n  <select\n    onClick={callback}\n  >\n    {list.map((item, index) => (\n      <option\n        key={item}\n      >\n        {index + 1}\n      </option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = {\n  callback: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport listPropTypes from './listPropTypes';\n\nconst ImplementedList = ({\n  list,\n  isReversed,\n  isSortedAlphabetically,\n  isSortedByLength,\n  SelectedLength,\n}) => {\n  let copyList = [...list];\n\n  if (isReversed) {\n    copyList.reverse();\n  }\n\n  if (isSortedAlphabetically) {\n    copyList.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isSortedByLength) {\n    copyList.sort((a, b) => b.length - a.length);\n  }\n\n  if (Number(SelectedLength) > 0) {\n    copyList = copyList.filter(item => item.length >= SelectedLength);\n  }\n\n  return (\n    <>\n      <h1>Goods</h1>\n      <ul className=\"App__list\">\n        {copyList.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nImplementedList.propTypes = listPropTypes;\n\nexport default ImplementedList;\n","import PropTypes from 'prop-types';\n\nconst listPropTypes = {\n  isReversed: PropTypes.bool.isRequired,\n  isSortedAlphabetically: PropTypes.bool.isRequired,\n  isSortedByLength: PropTypes.bool.isRequired,\n};\n\nexport default listPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Buttons from '../Buttons/Buttons';\n\nconst AllButtons = (\n  {\n    isReset,\n    isReversed,\n    isSortedAlphabetically,\n    isSortedByLength,\n  },\n) => (\n  <>\n    <Buttons\n      callback={isReversed}\n      name=\"Reverse\"\n    />\n    <Buttons\n      callback={isSortedAlphabetically}\n      name=\"Sort alphabetically\"\n    />\n    <Buttons\n      callback={isReset}\n      name=\"Reset\"\n    />\n    <Buttons\n      callback={isSortedByLength}\n      name=\"Sort by length\"\n    />\n  </>\n);\n\nAllButtons.propTypes = {\n  isSortedByLength: PropTypes.func.isRequired,\n  isReversed: PropTypes.func.isRequired,\n  isSortedAlphabetically: PropTypes.func.isRequired,\n  isReset: PropTypes.func.isRequired,\n};\n\nexport default AllButtons;\n","import React from 'react';\nimport './App.css';\nimport Buttons from './components/Buttons/Buttons';\nimport Select from './components/Select/Select';\nimport ImplementedList from './components/ImplementedList/ImplementedList';\nimport AllButtons from './components/AllButtons/AllButtons';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state={\n    list: goodsFromServer,\n    isVisible: false,\n    isReversed: false,\n    isSortedAlphabetically: false,\n    isSortedByLength: false,\n    SelectedLength: 0,\n  }\n\n  showOrHideList = () => {\n    this.setState(prevState => (\n      {\n        isVisible: !prevState.isVisible,\n      }));\n  }\n\n  isReversed = () => {\n    this.setState(prevState => (\n      {\n        isReversed: !prevState.isReversed,\n      }\n    ));\n  }\n\n  isSortedAlphabetically = () => {\n    this.setState(prevState => (\n      {\n        isSortedAlphabetically: !prevState.isSortedAlphabetically,\n      }\n    ));\n  }\n\n  isReset = () => {\n    this.setState(prevState => (\n      {\n        SelectedLength: 0,\n        isReversed: false,\n        isSortedByLength: false,\n        isSortedAlphabetically: false,\n        isReset: !prevState.isReset,\n      }\n    ));\n  }\n\n  isSortedByLength = () => {\n    this.setState(prevState => ({\n      isSortedByLength: !prevState.isSortedByLength,\n    }));\n  }\n\n  isSelectedLength = event => (\n    this.setState({ SelectedLength: event.target.value }));\n\n  render() {\n    const { list, isVisible } = this.state;\n\n    return (\n      <>\n        {\n          isVisible\n            ? (\n              <div className=\"App\">\n                <ImplementedList {...this.state} />\n                <div className=\"App__container-button\">\n                  <AllButtons\n                    isReset={this.isReset}\n                    isReversed={this.isReversed}\n                    isSortedAlphabetically={this.isSortedAlphabetically}\n                    isSortedByLength={this.isSortedByLength}\n                  />\n                  <Select list={list} callback={this.isSelectedLength} />\n                </div>\n              </div>\n            )\n            : (\n\n              <Buttons\n                callback={this.showOrHideList}\n                name=\"Start\"\n              />\n            )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}