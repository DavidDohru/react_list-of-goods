{"version":3,"sources":["components/Button/Button.jsx","components/Select/Select.jsx","components/Select/SelectPropTypes.jsx","components/ImplementedList/ImplementedList.jsx","components/ImplementedList/listPropTypes.jsx","components/Controls/Controls.jsx","App.js","index.js"],"names":["Button","onClick","name","type","Select","PropTypes","func","isRequired","arrayOf","string","onChange","list","value","map","item","index","key","ImplementedList","bool","stateValue","isReversed","isSortedAlphabetically","isSortedByLength","copyList","reverse","sort","a","b","localeCompare","length","Number","filter","className","good","Controls","resetList","reversList","sortAlphabeticallyList","sortByLengthList","goodsFromServer","App","state","isVisible","showOrHideList","setState","prevState","isReset","selectList","event","target","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87eb32d4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick, name }) => (\n  <button\n    onClick={onClick}\n    type=\"submit\"\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport SelectPropTypes from './SelectPropTypes';\n\nconst Select = ({ onChange, list, value }) => (\n  <select\n    value={value}\n    onChange={onChange}\n  >\n    {list.map((item, index) => (\n      <option\n        key={item}\n      >\n        {(index + 1)}\n      </option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = SelectPropTypes;\n\nexport default Select;\n","import PropTypes from 'prop-types';\n\nconst SelectPropTypes = {\n  onChange: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n};\n\nexport default SelectPropTypes;\n","import React from 'react';\nimport listPropTypes from './listPropTypes';\n\nconst ImplementedList = ({ stateValue }) => {\n  const {\n    list,\n    isReversed,\n    isSortedAlphabetically,\n    isSortedByLength,\n    value,\n  } = stateValue;\n\n  let copyList = [...list];\n\n  if (isReversed) {\n    copyList.reverse();\n  }\n\n  if (isSortedAlphabetically) {\n    copyList.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isSortedByLength) {\n    copyList.sort((a, b) => b.length - a.length);\n  }\n\n  if (Number(value) > 0) {\n    copyList = copyList.filter(item => item.length >= value);\n  }\n\n  return (\n    <>\n      <h1>Goods</h1>\n      <ul className=\"App__list\">\n        {copyList.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nImplementedList.propTypes = listPropTypes;\n\nexport default ImplementedList;\n","import PropTypes from 'prop-types';\n\nconst listPropTypes = {\n  isReversed: PropTypes.bool.isRequired,\n  isSortedAlphabetically: PropTypes.bool.isRequired,\n  isSortedByLength: PropTypes.bool.isRequired,\n};\n\nexport default listPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nexport const Controls = (\n  {\n    resetList,\n    reversList,\n    sortAlphabeticallyList,\n    sortByLengthList,\n  },\n) => (\n  <>\n    <Button\n      onClick={reversList}\n      name=\"Reverse\"\n    />\n    <Button\n      onClick={sortAlphabeticallyList}\n      name=\"Sort alphabetically\"\n    />\n    <Button\n      onClick={resetList}\n      name=\"Reset\"\n    />\n    <Button\n      onClick={sortByLengthList}\n      name=\"Sort by length\"\n    />\n  </>\n);\n\nControls.propTypes = {\n  sortByLengthList: PropTypes.func.isRequired,\n  reversList: PropTypes.func.isRequired,\n  sortAlphabeticallyList: PropTypes.func.isRequired,\n  resetList: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport Button from './components/Button/Button';\nimport Select from './components/Select/Select';\nimport ImplementedList from './components/ImplementedList/ImplementedList';\nimport { Controls } from './components/Controls/Controls';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state={\n    list: goodsFromServer,\n    isVisible: false,\n    isReversed: false,\n    isSortedAlphabetically: false,\n    isSortedByLength: false,\n    value: 1,\n  }\n\n  showOrHideList = () => {\n    this.setState(prevState => (\n      {\n        isVisible: !prevState.isVisible,\n      }));\n  }\n\n  reversList = () => {\n    this.setState(prevState => (\n      {\n        isReversed: !prevState.isReversed,\n      }\n    ));\n  }\n\n  sortAlphabeticallyList = () => {\n    this.setState(prevState => (\n      {\n        isSortedAlphabetically: !prevState.isSortedAlphabetically,\n      }\n    ));\n  }\n\n  resetList = () => {\n    this.setState(prevState => (\n      {\n        value: 1,\n        isReversed: false,\n        isSortedByLength: false,\n        isSortedAlphabetically: false,\n        isReset: !prevState.isReset,\n      }\n    ));\n  }\n\n  sortByLengthList = () => {\n    this.setState(prevState => ({\n      isSortedByLength: !prevState.isSortedByLength,\n    }));\n  }\n\n  selectList = event => (\n    this.setState({ value: event.target.value }));\n\n  render() {\n    const { list, isVisible } = this.state;\n\n    return (\n      <>\n        {\n          isVisible\n            ? (\n              <div className=\"App\">\n                <ImplementedList stateValue={this.state} />\n                <div className=\"App__container-button\">\n                  <Controls\n                    resetList={this.resetList}\n                    reversList={this.reversList}\n                    sortAlphabeticallyList={this.sortAlphabeticallyList}\n                    sortByLengthList={this.sortByLengthList}\n                  />\n                  <Select\n                    list={list}\n                    onChange={this.selectList}\n                    value={this.state.value}\n                  />\n                </div>\n              </div>\n            )\n            : (\n\n              <Button\n                onClick={this.showOrHideList}\n                name=\"Start\"\n              />\n            )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}